# Copyright 2025 GlyphyAI
#
# Use of this source code is governed by an MIT-style
# license that can be found in the LICENSE file or at
# https://opensource.org/licenses/MIT.

from typing import Any, Literal

from pydantic import BaseModel, Field


class Task(BaseModel):
    """Base class for representing a generic task."""

    task_type: str
    """The type identifier for the task."""

    title: str
    """A descriptive title for the task."""

    description: str | None = None
    """Optional detailed description of the task."""

    metadata: dict[str, Any] = Field(default_factory=dict)
    """Additional key-value pairs for task metadata."""


class CodingTask(Task):
    """Represents a coding task with implementation details."""

    task_type: Literal["coding"]
    """The type identifier for the task. Must be "coding"."""

    filepath: str
    """Path to the file where code should be written."""

    code: str
    """The actual code implementation."""

    assigned_to: str | None = None
    """Optional assignee for the task."""

    state: Literal["pending", "in_progress", "completed", "failed"] = "pending"
    """Current state of the task. Defaults to "pending"."""


class TestCase(BaseModel):
    """Represents a test case for code validation."""

    name: str
    """Name or description of the test case."""

    expected_output: str
    """The expected result of the test."""

    actual_output: str
    """The actual result from running the test."""


class TestingTask(Task):
    """Represents a testing task with test cases."""

    task_type: Literal["testing"]
    """The type identifier for the task. Must be "testing"."""

    test_cases: list[TestCase]
    """The list of test cases to validate code."""


class Plan(BaseModel):
    """Represents an execution plan containing tasks."""

    tasks: list[CodingTask | TestingTask]
    """The list of tasks to be executed."""


class InnerMonologue(BaseModel):
    """Represents an AI's inner thought process and structured response."""

    thoughts: str
    """The AI's reasoning and analysis process."""

    response: Plan
    """The structured plan generated by the AI."""
